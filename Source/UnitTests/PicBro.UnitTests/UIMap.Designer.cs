// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace PicBro.UnitTests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        #region Properties
        public UIRunWindow UIRunWindow
        {
            get
            {
                if ((this.mUIRunWindow == null))
                {
                    this.mUIRunWindow = new UIRunWindow();
                }
                return this.mUIRunWindow;
            }
        }
        
        public UIAppDataWindow UIAppDataWindow
        {
            get
            {
                if ((this.mUIAppDataWindow == null))
                {
                    this.mUIAppDataWindow = new UIAppDataWindow();
                }
                return this.mUIAppDataWindow;
            }
        }
        
        public UIPleaseConfirmWindow UIPleaseConfirmWindow
        {
            get
            {
                if ((this.mUIPleaseConfirmWindow == null))
                {
                    this.mUIPleaseConfirmWindow = new UIPleaseConfirmWindow();
                }
                return this.mUIPleaseConfirmWindow;
            }
        }
        
        public UITutorialWindow UITutorialWindow
        {
            get
            {
                if ((this.mUITutorialWindow == null))
                {
                    this.mUITutorialWindow = new UITutorialWindow();
                }
                return this.mUITutorialWindow;
            }
        }
        
        public UITutorialWindow1 UITutorialWindow1
        {
            get
            {
                if ((this.mUITutorialWindow1 == null))
                {
                    this.mUITutorialWindow1 = new UITutorialWindow1();
                }
                return this.mUITutorialWindow1;
            }
        }
        
        public UIPicbroWindow UIPicbroWindow
        {
            get
            {
                if ((this.mUIPicbroWindow == null))
                {
                    this.mUIPicbroWindow = new UIPicbroWindow();
                }
                return this.mUIPicbroWindow;
            }
        }
        
        public UIBrowseForFolderWindow UIBrowseForFolderWindow
        {
            get
            {
                if ((this.mUIBrowseForFolderWindow == null))
                {
                    this.mUIBrowseForFolderWindow = new UIBrowseForFolderWindow();
                }
                return this.mUIBrowseForFolderWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIRunWindow mUIRunWindow;
        
        private UIAppDataWindow mUIAppDataWindow;
        
        private UIPleaseConfirmWindow mUIPleaseConfirmWindow;
        
        private UITutorialWindow mUITutorialWindow;
        
        private UITutorialWindow1 mUITutorialWindow1;
        
        private UIPicbroWindow mUIPicbroWindow;
        
        private UIBrowseForFolderWindow mUIBrowseForFolderWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRunWindow : WinWindow
    {
        
        public UIRunWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Run";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Run");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "12298";
            this.WindowTitles.Add("Run");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIOpenComboBox
        {
            get
            {
                if ((this.mUIOpenComboBox == null))
                {
                    this.mUIOpenComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIOpenComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Open:";
                    this.mUIOpenComboBox.WindowTitles.Add("Run");
                    #endregion
                }
                return this.mUIOpenComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIOpenComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Run");
            #endregion
        }
        
        #region Properties
        public WinEdit UIOpenEdit
        {
            get
            {
                if ((this.mUIOpenEdit == null))
                {
                    this.mUIOpenEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIOpenEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Open:";
                    this.mUIOpenEdit.WindowTitles.Add("Run");
                    #endregion
                }
                return this.mUIOpenEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIOpenEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIAppDataWindow : WinWindow
    {
        
        public UIAppDataWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "AppData";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("AppData");
            this.WindowTitles.Add("Local");
            this.WindowTitles.Add("PicBro");
            #endregion
        }
        
        #region Properties
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIShellViewWindow UIShellViewWindow
        {
            get
            {
                if ((this.mUIShellViewWindow == null))
                {
                    this.mUIShellViewWindow = new UIShellViewWindow(this);
                }
                return this.mUIShellViewWindow;
            }
        }
        
        public UILocalTitleBar UILocalTitleBar
        {
            get
            {
                if ((this.mUILocalTitleBar == null))
                {
                    this.mUILocalTitleBar = new UILocalTitleBar(this);
                }
                return this.mUILocalTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow2 mUIItemWindow;
        
        private UIShellViewWindow mUIShellViewWindow;
        
        private UILocalTitleBar mUILocalTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("AppData");
            this.WindowTitles.Add("Local");
            #endregion
        }
        
        #region Properties
        public UILocalListItem UILocalListItem
        {
            get
            {
                if ((this.mUILocalListItem == null))
                {
                    this.mUILocalListItem = new UILocalListItem(this);
                }
                return this.mUILocalListItem;
            }
        }
        
        public UIPicBroListItem UIPicBroListItem
        {
            get
            {
                if ((this.mUIPicBroListItem == null))
                {
                    this.mUIPicBroListItem = new UIPicBroListItem(this);
                }
                return this.mUIPicBroListItem;
            }
        }
        #endregion
        
        #region Fields
        private UILocalListItem mUILocalListItem;
        
        private UIPicBroListItem mUIPicBroListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILocalListItem : WinListItem
    {
        
        public UILocalListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Local";
            this.WindowTitles.Add("AppData");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("AppData");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPicBroListItem : WinListItem
    {
        
        public UIPicBroListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "PicBro";
            this.WindowTitles.Add("Local");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Local");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIShellViewWindow : WinWindow
    {
        
        public UIShellViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ShellView";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "SHELLDLL_DefView";
            this.WindowTitles.Add("Local");
            #endregion
        }
        
        #region Properties
        public UIShellViewClient UIShellViewClient
        {
            get
            {
                if ((this.mUIShellViewClient == null))
                {
                    this.mUIShellViewClient = new UIShellViewClient(this);
                }
                return this.mUIShellViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIShellViewClient mUIShellViewClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIShellViewClient : WinClient
    {
        
        public UIShellViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Shell Folder View";
            this.WindowTitles.Add("Local");
            #endregion
        }
        
        #region Properties
        public WinList UIItemsViewList
        {
            get
            {
                if ((this.mUIItemsViewList == null))
                {
                    this.mUIItemsViewList = new WinList(this);
                    #region Search Criteria
                    this.mUIItemsViewList.SearchProperties[WinList.PropertyNames.Name] = "Items View";
                    this.mUIItemsViewList.WindowTitles.Add("Local");
                    #endregion
                }
                return this.mUIItemsViewList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIItemsViewList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILocalTitleBar : WinTitleBar
    {
        
        public UILocalTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Local");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Local");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPleaseConfirmWindow : WpfWindow
    {
        
        public UIPleaseConfirmWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Please Confirm?";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Please Confirm?");
            #endregion
        }
        
        #region Properties
        public WpfButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WpfButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Please Confirm?");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIYesButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITutorialWindow : WpfWindow
    {
        
        public UITutorialWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Tutorial";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Tutorial");
            #endregion
        }
        
        #region Properties
        public UITutorialTitleBar UITutorialTitleBar
        {
            get
            {
                if ((this.mUITutorialTitleBar == null))
                {
                    this.mUITutorialTitleBar = new UITutorialTitleBar(this);
                }
                return this.mUITutorialTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UITutorialTitleBar mUITutorialTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITutorialTitleBar : WpfTitleBar
    {
        
        public UITutorialTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTitleBar.PropertyNames.AutomationId] = "TitleBar";
            this.WindowTitles.Add("Tutorial");
            #endregion
        }
        
        #region Properties
        public WpfButton UIMinimizeButton
        {
            get
            {
                if ((this.mUIMinimizeButton == null))
                {
                    this.mUIMinimizeButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIMinimizeButton.SearchProperties[WpfButton.PropertyNames.Name] = "Minimize";
                    this.mUIMinimizeButton.WindowTitles.Add("Tutorial");
                    #endregion
                }
                return this.mUIMinimizeButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIMinimizeButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITutorialWindow1 : WinWindow
    {
        
        public UITutorialWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Tutorial";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Tutorial");
            #endregion
        }
        
        #region Properties
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.ClassName] = "Internet Explorer_Server";
            this.WindowTitles.Add("Tutorial");
            #endregion
        }
        
        #region Properties
        public UIPowerPichelpfileDocument UIPowerPichelpfileDocument
        {
            get
            {
                if ((this.mUIPowerPichelpfileDocument == null))
                {
                    this.mUIPowerPichelpfileDocument = new UIPowerPichelpfileDocument(this);
                }
                return this.mUIPowerPichelpfileDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIPowerPichelpfileDocument mUIPowerPichelpfileDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPowerPichelpfileDocument : HtmlDocument
    {
        
        public UIPowerPichelpfileDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "powerPic helpfile";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "E:/Workspace/PowerPic/Main/Source/Build/Help/help.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "file://E:\\Workspace\\PowerPic\\Main\\Source\\Build\\Help\\help.html";
            this.WindowTitles.Add("Tutorial");
            #endregion
        }
        
        #region Properties
        public UIDivNavigationCustom UIDivNavigationCustom
        {
            get
            {
                if ((this.mUIDivNavigationCustom == null))
                {
                    this.mUIDivNavigationCustom = new UIDivNavigationCustom(this);
                }
                return this.mUIDivNavigationCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIDivNavigationCustom mUIDivNavigationCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDivNavigationCustom : HtmlCustom
    {
        
        public UIDivNavigationCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "NAV";
            this.SearchProperties["Id"] = "divNavigation";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"divNavigation\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Tutorial");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIFirstStepsHyperlink
        {
            get
            {
                if ((this.mUIFirstStepsHyperlink == null))
                {
                    this.mUIFirstStepsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIFirstStepsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIFirstStepsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIFirstStepsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIFirstStepsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "First Steps";
                    this.mUIFirstStepsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "E:/Workspace/PowerPic/Main/Source/Build/Help/help.html";
                    this.mUIFirstStepsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIFirstStepsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "file:///E:/Workspace/PowerPic/Main/Source/Build/Help/help.html#first";
                    this.mUIFirstStepsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIFirstStepsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#first\"";
                    this.mUIFirstStepsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIFirstStepsHyperlink.WindowTitles.Add("Tutorial");
                    #endregion
                }
                return this.mUIFirstStepsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIFirstStepsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPicbroWindow : WpfWindow
    {
        
        public UIPicbroWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Picbro";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        
        public UIItemCustom1 UIItemCustom1
        {
            get
            {
                if ((this.mUIItemCustom1 == null))
                {
                    this.mUIItemCustom1 = new UIItemCustom1(this);
                }
                return this.mUIItemCustom1;
            }
        }
        
        public UIItemCustom2 UIItemCustom2
        {
            get
            {
                if ((this.mUIItemCustom2 == null))
                {
                    this.mUIItemCustom2 = new UIItemCustom2(this);
                }
                return this.mUIItemCustom2;
            }
        }
        
        public UIItemCustom3 UIItemCustom3
        {
            get
            {
                if ((this.mUIItemCustom3 == null))
                {
                    this.mUIItemCustom3 = new UIItemCustom3(this);
                }
                return this.mUIItemCustom3;
            }
        }
        
        public UIItemCustom4 UIItemCustom4
        {
            get
            {
                if ((this.mUIItemCustom4 == null))
                {
                    this.mUIItemCustom4 = new UIItemCustom4(this);
                }
                return this.mUIItemCustom4;
            }
        }
        
        public UIRootCustom4 UIRootCustom
        {
            get
            {
                if ((this.mUIRootCustom == null))
                {
                    this.mUIRootCustom = new UIRootCustom4(this);
                }
                return this.mUIRootCustom;
            }
        }
        
        public UIItemCustom31 UIItemCustom31
        {
            get
            {
                if ((this.mUIItemCustom31 == null))
                {
                    this.mUIItemCustom31 = new UIItemCustom31(this);
                }
                return this.mUIItemCustom31;
            }
        }
        
        public UIImageFullViewUCCustom UIImageFullViewUCCustom
        {
            get
            {
                if ((this.mUIImageFullViewUCCustom == null))
                {
                    this.mUIImageFullViewUCCustom = new UIImageFullViewUCCustom(this);
                }
                return this.mUIImageFullViewUCCustom;
            }
        }
        
        public WpfButton UIPART_CloseButton
        {
            get
            {
                if ((this.mUIPART_CloseButton == null))
                {
                    this.mUIPART_CloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPART_CloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_Close";
                    this.mUIPART_CloseButton.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIPART_CloseButton;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom mUIItemCustom;
        
        private UIItemCustom1 mUIItemCustom1;
        
        private UIItemCustom2 mUIItemCustom2;
        
        private UIItemCustom3 mUIItemCustom3;
        
        private UIItemCustom4 mUIItemCustom4;
        
        private UIRootCustom4 mUIRootCustom;
        
        private UIItemCustom31 mUIItemCustom31;
        
        private UIImageFullViewUCCustom mUIImageFullViewUCCustom;
        
        private WpfButton mUIPART_CloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MenuBarView";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public UIItemMenu UIItemMenu
        {
            get
            {
                if ((this.mUIItemMenu == null))
                {
                    this.mUIItemMenu = new UIItemMenu(this);
                }
                return this.mUIItemMenu;
            }
        }
        
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        
        public UIItemMenu1 UIItemMenu1
        {
            get
            {
                if ((this.mUIItemMenu1 == null))
                {
                    this.mUIItemMenu1 = new UIItemMenu1(this);
                }
                return this.mUIItemMenu1;
            }
        }
        
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private UIItemMenu mUIItemMenu;
        
        private WpfSlider mUIItemSlider;
        
        private UIItemMenu1 mUIItemMenu1;
        
        private WpfEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemMenu : WpfMenu
    {
        
        public UIItemMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public UIFILEMenuItem UIFILEMenuItem
        {
            get
            {
                if ((this.mUIFILEMenuItem == null))
                {
                    this.mUIFILEMenuItem = new UIFILEMenuItem(this);
                }
                return this.mUIFILEMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFILEMenuItem mUIFILEMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIFILEMenuItem : WpfMenuItem
    {
        
        public UIFILEMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenuItem.PropertyNames.Name] = "FILE";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem UIAdddirectoryMenuItem
        {
            get
            {
                if ((this.mUIAdddirectoryMenuItem == null))
                {
                    this.mUIAdddirectoryMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIAdddirectoryMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Add directory";
                    this.mUIAdddirectoryMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIAdddirectoryMenuItem.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIAdddirectoryMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mUIAdddirectoryMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemMenu1 : WpfMenu
    {
        
        public UIItemMenu1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfMenu.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public UIItemMenuItem UIItemMenuItem
        {
            get
            {
                if ((this.mUIItemMenuItem == null))
                {
                    this.mUIItemMenuItem = new UIItemMenuItem(this);
                }
                return this.mUIItemMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIItemMenuItem mUIItemMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemMenuItem : WpfMenuItem
    {
        
        public UIItemMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem UIDateModifiedMenuItem
        {
            get
            {
                if ((this.mUIDateModifiedMenuItem == null))
                {
                    this.mUIDateModifiedMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIDateModifiedMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "DateMenuItem";
                    this.mUIDateModifiedMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIDateModifiedMenuItem.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIDateModifiedMenuItem;
            }
        }
        
        public WpfMenuItem UISizeMenuItem
        {
            get
            {
                if ((this.mUISizeMenuItem == null))
                {
                    this.mUISizeMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUISizeMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "SizeMenuItem";
                    this.mUISizeMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUISizeMenuItem.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUISizeMenuItem;
            }
        }
        
        public WpfMenuItem UITypeMenuItem
        {
            get
            {
                if ((this.mUITypeMenuItem == null))
                {
                    this.mUITypeMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUITypeMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "TypeMenuItem";
                    this.mUITypeMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUITypeMenuItem.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUITypeMenuItem;
            }
        }
        
        public WpfMenuItem UIPopularityMenuItem
        {
            get
            {
                if ((this.mUIPopularityMenuItem == null))
                {
                    this.mUIPopularityMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIPopularityMenuItem.SearchProperties[WpfMenuItem.PropertyNames.AutomationId] = "PopularityMenuItem";
                    this.mUIPopularityMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIPopularityMenuItem.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIPopularityMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mUIDateModifiedMenuItem;
        
        private WpfMenuItem mUISizeMenuItem;
        
        private WpfMenuItem mUITypeMenuItem;
        
        private WpfMenuItem mUIPopularityMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemCustom1 : WpfCustom
    {
        
        public UIItemCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FolderListView";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public UIFolderListBoxList UIFolderListBoxList
        {
            get
            {
                if ((this.mUIFolderListBoxList == null))
                {
                    this.mUIFolderListBoxList = new UIFolderListBoxList(this);
                }
                return this.mUIFolderListBoxList;
            }
        }
        #endregion
        
        #region Fields
        private UIFolderListBoxList mUIFolderListBoxList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIFolderListBoxList : WpfList
    {
        
        public UIFolderListBoxList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "FolderListBox";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIFavoritesListItem
        {
            get
            {
                if ((this.mUIFavoritesListItem == null))
                {
                    this.mUIFavoritesListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIFavoritesListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Favorites";
                    this.mUIFavoritesListItem.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIFavoritesListItem;
            }
        }
        
        public WpfListItem UITestListItem
        {
            get
            {
                if ((this.mUITestListItem == null))
                {
                    this.mUITestListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUITestListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Test";
                    this.mUITestListItem.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUITestListItem;
            }
        }
        
        public WpfListItem UITest1ListItem
        {
            get
            {
                if ((this.mUITest1ListItem == null))
                {
                    this.mUITest1ListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUITest1ListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "Test1";
                    this.mUITest1ListItem.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUITest1ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIFavoritesListItem;
        
        private WpfListItem mUITestListItem;
        
        private WpfListItem mUITest1ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemCustom2 : WpfCustom
    {
        
        public UIItemCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ImageListView";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public UIListList UIListList
        {
            get
            {
                if ((this.mUIListList == null))
                {
                    this.mUIListList = new UIListList(this);
                }
                return this.mUIListList;
            }
        }
        #endregion
        
        #region Fields
        private UIListList mUIListList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIListList : WpfList
    {
        
        public UIListList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "list";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public UIItem1jpgListItem UIItem1jpgListItem
        {
            get
            {
                if ((this.mUIItem1jpgListItem == null))
                {
                    this.mUIItem1jpgListItem = new UIItem1jpgListItem(this);
                }
                return this.mUIItem1jpgListItem;
            }
        }
        
        public UIItem3pngListItem UIItem3pngListItem
        {
            get
            {
                if ((this.mUIItem3pngListItem == null))
                {
                    this.mUIItem3pngListItem = new UIItem3pngListItem(this);
                }
                return this.mUIItem3pngListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIItem1jpgListItem mUIItem1jpgListItem;
        
        private UIItem3pngListItem mUIItem3pngListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem1jpgListItem : WpfListItem
    {
        
        public UIItem1jpgListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "1.jpg";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfImage UISmallThumbImage
        {
            get
            {
                if ((this.mUISmallThumbImage == null))
                {
                    this.mUISmallThumbImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUISmallThumbImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "SmallThumb";
                    this.mUISmallThumbImage.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUISmallThumbImage;
            }
        }
        
        public WpfImage UIMediumThumbImage
        {
            get
            {
                if ((this.mUIMediumThumbImage == null))
                {
                    this.mUIMediumThumbImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUIMediumThumbImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "MediumThumb";
                    this.mUIMediumThumbImage.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIMediumThumbImage;
            }
        }
        
        public WpfImage UILargeThumbImage
        {
            get
            {
                if ((this.mUILargeThumbImage == null))
                {
                    this.mUILargeThumbImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUILargeThumbImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "LargeThumb";
                    this.mUILargeThumbImage.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUILargeThumbImage;
            }
        }
        
        public WpfImage UIExtraLargeThumbImage
        {
            get
            {
                if ((this.mUIExtraLargeThumbImage == null))
                {
                    this.mUIExtraLargeThumbImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUIExtraLargeThumbImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "ExtraLargeThumb";
                    this.mUIExtraLargeThumbImage.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIExtraLargeThumbImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mUISmallThumbImage;
        
        private WpfImage mUIMediumThumbImage;
        
        private WpfImage mUILargeThumbImage;
        
        private WpfImage mUIExtraLargeThumbImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem3pngListItem : WpfListItem
    {
        
        public UIItem3pngListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfListItem.PropertyNames.Name] = "3.png";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfImage UISmallThumbImage
        {
            get
            {
                if ((this.mUISmallThumbImage == null))
                {
                    this.mUISmallThumbImage = new WpfImage(this);
                    #region Search Criteria
                    this.mUISmallThumbImage.SearchProperties[WpfImage.PropertyNames.AutomationId] = "SmallThumb";
                    this.mUISmallThumbImage.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUISmallThumbImage;
            }
        }
        #endregion
        
        #region Fields
        private WpfImage mUISmallThumbImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemCustom3 : WpfCustom
    {
        
        public UIItemCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.FooterView";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public UISLIDESHOWText UISLIDESHOWText
        {
            get
            {
                if ((this.mUISLIDESHOWText == null))
                {
                    this.mUISLIDESHOWText = new UISLIDESHOWText(this);
                }
                return this.mUISLIDESHOWText;
            }
        }
        #endregion
        
        #region Fields
        private UISLIDESHOWText mUISLIDESHOWText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISLIDESHOWText : WpfText
    {
        
        public UISLIDESHOWText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "SLIDE SHOW";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfProgressBar UIItemProgressBar
        {
            get
            {
                if ((this.mUIItemProgressBar == null))
                {
                    this.mUIItemProgressBar = new WpfProgressBar(this);
                    #region Search Criteria
                    this.mUIItemProgressBar.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemProgressBar.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIItemProgressBar;
            }
        }
        #endregion
        
        #region Fields
        private WpfProgressBar mUIItemProgressBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemCustom4 : WpfCustom
    {
        
        public UIItemCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ImageDetailView";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfText UIItem1jpgText
        {
            get
            {
                if ((this.mUIItem1jpgText == null))
                {
                    this.mUIItem1jpgText = new WpfText(this);
                    #region Search Criteria
                    this.mUIItem1jpgText.SearchProperties[WpfText.PropertyNames.Name] = "1.jpg";
                    this.mUIItem1jpgText.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIItem1jpgText;
            }
        }
        
        public WpfText UIItem8830KBText
        {
            get
            {
                if ((this.mUIItem8830KBText == null))
                {
                    this.mUIItem8830KBText = new WpfText(this);
                    #region Search Criteria
                    this.mUIItem8830KBText.SearchProperties[WpfText.PropertyNames.Name] = "883.0 KB";
                    this.mUIItem8830KBText.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIItem8830KBText;
            }
        }
        
        public WpfToggleButton UIAddtoFavoritesToggleButton
        {
            get
            {
                if ((this.mUIAddtoFavoritesToggleButton == null))
                {
                    this.mUIAddtoFavoritesToggleButton = new WpfToggleButton(this);
                    #region Search Criteria
                    this.mUIAddtoFavoritesToggleButton.SearchProperties[WpfToggleButton.PropertyNames.HelpText] = "Add to Favorites";
                    this.mUIAddtoFavoritesToggleButton.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIAddtoFavoritesToggleButton;
            }
        }
        
        public UIRootCustom UIRootCustom
        {
            get
            {
                if ((this.mUIRootCustom == null))
                {
                    this.mUIRootCustom = new UIRootCustom(this);
                }
                return this.mUIRootCustom;
            }
        }
        
        public UIRootCustom1 UIRootCustom1
        {
            get
            {
                if ((this.mUIRootCustom1 == null))
                {
                    this.mUIRootCustom1 = new UIRootCustom1(this);
                }
                return this.mUIRootCustom1;
            }
        }
        
        public UIRootCustom2 UIRootCustom2
        {
            get
            {
                if ((this.mUIRootCustom2 == null))
                {
                    this.mUIRootCustom2 = new UIRootCustom2(this);
                }
                return this.mUIRootCustom2;
            }
        }
        
        public UIRootCustom3 UIRootCustom3
        {
            get
            {
                if ((this.mUIRootCustom3 == null))
                {
                    this.mUIRootCustom3 = new UIRootCustom3(this);
                }
                return this.mUIRootCustom3;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIItem1jpgText;
        
        private WpfText mUIItem8830KBText;
        
        private WpfToggleButton mUIAddtoFavoritesToggleButton;
        
        private UIRootCustom mUIRootCustom;
        
        private UIRootCustom1 mUIRootCustom1;
        
        private UIRootCustom2 mUIRootCustom2;
        
        private UIRootCustom3 mUIRootCustom3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRootCustom : WpfCustom
    {
        
        public UIRootCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.TagView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "root";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public UITAGSText UITAGSText
        {
            get
            {
                if ((this.mUITAGSText == null))
                {
                    this.mUITAGSText = new UITAGSText(this);
                }
                return this.mUITAGSText;
            }
        }
        #endregion
        
        #region Fields
        private UITAGSText mUITAGSText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITAGSText : WpfText
    {
        
        public UITAGSText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "TAGS";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRootCustom1 : WpfCustom
    {
        
        public UIRootCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.TagView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "root";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WpfButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRootCustom2 : WpfCustom
    {
        
        public UIRootCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.TagView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "root";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public UITAGSText1 UITAGSText
        {
            get
            {
                if ((this.mUITAGSText == null))
                {
                    this.mUITAGSText = new UITAGSText1(this);
                }
                return this.mUITAGSText;
            }
        }
        #endregion
        
        #region Fields
        private UITAGSText1 mUITAGSText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITAGSText1 : WpfText
    {
        
        public UITAGSText1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "TAGS";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRootCustom3 : WpfCustom
    {
        
        public UIRootCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.TagView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "root";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WpfButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRootCustom4 : WpfCustom
    {
        
        public UIRootCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.TagView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "root";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemList : WpfList
    {
        
        public UIItemList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIItem1ListItem
        {
            get
            {
                if ((this.mUIItem1ListItem == null))
                {
                    this.mUIItem1ListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIItem1ListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "1";
                    this.mUIItem1ListItem.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIItem1ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIItem1ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemCustom31 : WpfCustom
    {
        
        public UIItemCustom31(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ImageHeaderView";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfButton UIBACKButton
        {
            get
            {
                if ((this.mUIBACKButton == null))
                {
                    this.mUIBACKButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIBACKButton.SearchProperties[WpfButton.PropertyNames.Name] = "BACK";
                    this.mUIBACKButton.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIBACKButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIBACKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIImageFullViewUCCustom : WpfCustom
    {
        
        public UIImageFullViewUCCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.ImageView";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "ImageFullViewUC";
            this.WindowTitles.Add("Picbro");
            #endregion
        }
        
        #region Properties
        public WpfButton UIÀButton
        {
            get
            {
                if ((this.mUIÀButton == null))
                {
                    this.mUIÀButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIÀButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "NextImageButton";
                    this.mUIÀButton.WindowTitles.Add("Picbro");
                    #endregion
                }
                return this.mUIÀButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIÀButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIBrowseForFolderWindow : WinWindow
    {
        
        public UIBrowseForFolderWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Browse For Folder";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Browse For Folder");
            #endregion
        }
        
        #region Properties
        public UITreeViewWindow UITreeViewWindow
        {
            get
            {
                if ((this.mUITreeViewWindow == null))
                {
                    this.mUITreeViewWindow = new UITreeViewWindow(this);
                }
                return this.mUITreeViewWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITreeViewWindow mUITreeViewWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITreeViewWindow : WinWindow
    {
        
        public UITreeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "100";
            this.WindowTitles.Add("Browse For Folder");
            #endregion
        }
        
        #region Properties
        public UIDesktopTreeItem UIDesktopTreeItem
        {
            get
            {
                if ((this.mUIDesktopTreeItem == null))
                {
                    this.mUIDesktopTreeItem = new UIDesktopTreeItem(this);
                }
                return this.mUIDesktopTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDesktopTreeItem mUIDesktopTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDesktopTreeItem : WinTreeItem
    {
        
        public UIDesktopTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Desktop";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Browse For Folder");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UITestTreeItem
        {
            get
            {
                if ((this.mUITestTreeItem == null))
                {
                    this.mUITestTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUITestTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Test";
                    this.mUITestTreeItem.SearchProperties["Value"] = "1";
                    this.mUITestTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUITestTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUITestTreeItem.WindowTitles.Add("Browse For Folder");
                    #endregion
                }
                return this.mUITestTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUITestTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Browse For Folder");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Browse For Folder");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
